apiVersion: apps/v1
kind: Deployment
metadata:
  name: laraveltenn-laravelproj
spec:
  replicas: 2
  selector:
    matchLabels:
      app: laraveltenn-laravelproj
  template:
    metadata:
      annotations:
        redeploy: 'true'
      labels:
        app: laraveltenn-laravelproj
    spec:
      containers:
      - image: 672072155362.dkr.ecr.us-east-1.amazonaws.com/lvecr:latest
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 5
        name: lvecrcont
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: laravelproj-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: laraveltenn-laravelproj
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: 'true'
  name: my-aws-ingress-class
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/load-balancer-name: laraveltenn-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-09c848031e4a97887, subnet-0fa190a76820e5e35
    alb.ingress.kubernetes.io/success-codes: 200-404
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
  labels:
    app: app-laraveltenn
  name: ingress-laraveltenn
spec:
  defaultBackend:
    service:
      name: laravelproj-service
      port:
        number: 80
  ingressClassName: my-aws-ingress-class
